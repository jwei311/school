#include<iostream>
#define SIZE 20

using namespace std;

class stack{
	int a[SIZE];    //array to store data
	int tos;    //top of stack
	public:
		stack();
		int isempty();
		int isfull();
		void push(int);
		void pop();
		void display();
};

stack::stack(){
	tos=0;    //initialize top of stack
}

int stack::isempty(){
	return(tos==0);      //tos 0 means stack is empty
}

int stack::isfull(){
	return(tos==SIZE);    //SIZE is 20 , so stack is full when it is 20
}

void stack::push(int i){
	
	if(!isfull()){                       //if not full only process "puss"
		cout<<"Pushing "<<i<<endl;
		a[tos]=i;                    //tos represent 现在的stack level.
		tos++;                       //after push , the stack level(tos) must +1
	}
	else{
		cerr<<"Stack overflow , error ! \n";
	}
}

void stack::pop(){
	
	if(!isempty()){                              //if not empty only process “pop"
		
		cout<<"Popping "<<a[tos-1]<<endl;
		tos--;                               //after pop , the stack level(tos) must -1
	}
	else{
		cerr<<"Stack is empty ! \n";
	}
}

void stack::display(){
	
	for(int i=0 ; i<tos ; i++){
		cout<<a[i]<<" ";
	}
	cout<<"\n";
}

int main(){
	
	stack s;
	
	int choice = 0;
	int holder;
	
	cout<<"1.push"<<endl
	    <<"2.pop"<<endl
	    <<"3.display"<<endl
	    <<"4.exit \n"<<endl;
	    
	while(choice != 4){
		
    	cout<<"\n";
    	cout<<"choose--> ";
    	cin>>choice;
    	cout<<"\n";    
	
	
		switch (choice){
		case 1:
			cout<<"ready to push --> ";
			cin>>holder;
			s.push(holder);
		    break;
		
		case 2:
			s.pop();
			break;
		
		case 3:
			cout<<"Now holding --> ";
			s.display();
			
			break;
			
		case 4:
			cout<<"Exit.";
			break;
		
		default:
			cout<<"invalid input ! \n";
			break;
	    }
}
	    
	

	
	
	return 0;
}
